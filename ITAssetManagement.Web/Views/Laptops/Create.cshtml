@model ITAssetManagement.Web.Models.Laptop

@{
    ViewData["Title"] = "Yeni Laptop Ekle";
}

<h1>Yeni Laptop Ekle</h1>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="mb-3">
                <label asp-for="EtiketNo" class="form-label">Etiket No</label>
                <div class="input-group">
                    <input asp-for="EtiketNo" class="form-control" id="etiketNoInput" />
                    <button type="button" class="btn btn-outline-secondary" onclick="startScanning()">
                        <i class="fas fa-camera"></i>
                    </button>
                </div>
                <span asp-validation-for="EtiketNo" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Marka" class="form-label">Marka</label>
                <input asp-for="Marka" class="form-control" />
                <span asp-validation-for="Marka" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Model" class="form-label">Model</label>
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Ozellikler" class="form-label">Özellikler</label>
                <textarea asp-for="Ozellikler" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Ozellikler" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Notes" class="form-label">Notlar</label>
                <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Durum" class="form-label">Durum</label>
                <select asp-for="Durum" class="form-select">
                    <option value="Aktif">Aktif</option>
                    <option value="Bakımda">Bakımda</option>
                    <option value="Arızalı">Arızalı</option>
                    <option value="Depo">Depo</option>
                </select>
                <span asp-validation-for="Durum" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Kaydet</button>
                <a asp-action="Index" class="btn btn-secondary">İptal</a>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <div id="reader" class="mt-3" style="display: none;"></div>
        <div id="scannerStatus" class="alert alert-info mt-3" style="display: none;"></div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://unpkg.com/html5-qrcode"></script>
    <script>
        let html5QrcodeScanner = null;

        async function startScanning() {
            try {
                const scannerDiv = document.getElementById('reader');
                const statusDiv = document.getElementById('scannerStatus');
                
                // Show the scanner elements
                scannerDiv.style.display = 'block';
                statusDiv.style.display = 'block';
                statusDiv.textContent = 'Kamera başlatılıyor...';

                // Request camera permission first
                await navigator.mediaDevices.getUserMedia({ video: true });

                // Initialize scanner if not already initialized
                if (!html5QrcodeScanner) {
                    html5QrcodeScanner = new Html5Qrcode("reader");

                    const config = {
                        fps: 10,
                        qrbox: { width: 250, height: 250 },
                        aspectRatio: 1.0,
                        formatsToSupport: [
                            Html5QrcodeSupportedFormats.QR_CODE,
                            Html5QrcodeSupportedFormats.EAN_13,
                            Html5QrcodeSupportedFormats.EAN_8,
                            Html5QrcodeSupportedFormats.CODE_128,
                            Html5QrcodeSupportedFormats.CODE_39,
                            Html5QrcodeSupportedFormats.UPC_A,
                            Html5QrcodeSupportedFormats.UPC_E,
                        ]
                    };

                    await html5QrcodeScanner.start(
                        { facingMode: "environment" },
                        config,
                        onScanSuccess,
                        onScanError
                    );

                    statusDiv.textContent = 'Kamera hazır, barkodu okutun...';
                }
            } catch (err) {
                const statusDiv = document.getElementById('scannerStatus');
                statusDiv.className = 'alert alert-danger';
                statusDiv.textContent = 'Kamera başlatılamadı: ' + (err.message || 'Bilinmeyen hata');
                console.error('Kamera hatası:', err);
            }
        }

        function onScanSuccess(decodedText) {
            document.getElementById('etiketNoInput').value = decodedText;
            stopScanning();
        }

        function onScanError(error) {
            // Silently handle scanning errors
            console.debug('Barkod okuma:', error);
        }

        async function stopScanning() {
            if (html5QrcodeScanner) {
                try {
                    await html5QrcodeScanner.stop();
                    html5QrcodeScanner = null;
                    
                    // Hide the scanner elements
                    document.getElementById('reader').style.display = 'none';
                    document.getElementById('scannerStatus').style.display = 'none';
                } catch (err) {
                    console.error('Kamera kapatma hatası:', err);
                }
            }
        }

        // Clean up when leaving the page
        window.addEventListener('beforeunload', stopScanning);
    </script>
}

