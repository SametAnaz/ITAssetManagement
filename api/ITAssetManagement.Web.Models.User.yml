### YamlMime:ManagedReference
items:
- uid: ITAssetManagement.Web.Models.User
  commentId: T:ITAssetManagement.Web.Models.User
  id: User
  parent: ITAssetManagement.Web.Models
  children:
  - ITAssetManagement.Web.Models.User.Assignments
  - ITAssetManagement.Web.Models.User.Department
  - ITAssetManagement.Web.Models.User.Email
  - ITAssetManagement.Web.Models.User.FullName
  - ITAssetManagement.Web.Models.User.Id
  - ITAssetManagement.Web.Models.User.Phone
  - ITAssetManagement.Web.Models.User.Position
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: ITAssetManagement.Web.Models.User
  type: Class
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: User
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 37
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: >-
    Sistemdeki kullanıcıları temsil eden sınıf.

    Bu sınıf, IT varlıklarını zimmetinde bulunduran personel bilgilerini yönetir.
  remarks: >-
    <p>

    Bu sınıf aşağıdaki işlevleri sağlar:

    <ul><li>Personel bilgilerinin yönetimi</li><li>Zimmet takibi</li><li>Departman bazlı raporlama</li><li>İletişim bilgilerinin tutulması</li></ul>

    </p>

    <p>

    İlişkili tablolar:

    <ul><li>Assignments - Kullanıcının zimmet kayıtları</li></ul>

    </p>
  example:
  - >-
    Yeni bir kullanıcı kaydı oluşturma örneği:

    <pre><code class="lang-csharp">var user = new User

    {
        FullName = "John Doe",
        Email = "john.doe@company.com",
        Department = "IT",
        Position = "Developer"
    };</code></pre>
  syntax:
    content: public class User
    content.vb: Public Class User
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ITAssetManagement.Web.Models.User.Id
  commentId: P:ITAssetManagement.Web.Models.User.Id
  id: Id
  parent: ITAssetManagement.Web.Models.User
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: User.Id
  fullName: ITAssetManagement.Web.Models.User.Id
  type: Property
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: Id
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 45
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: Kullanıcının benzersiz kimlik numarası.
  remarks: Primary key olarak kullanılır ve otomatik artar.
  example: []
  syntax:
    content: >-
      [Key]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Key>

      Public Property Id As Integer
  overload: ITAssetManagement.Web.Models.User.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
- uid: ITAssetManagement.Web.Models.User.FullName
  commentId: P:ITAssetManagement.Web.Models.User.FullName
  id: FullName
  parent: ITAssetManagement.Web.Models.User
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: User.FullName
  fullName: ITAssetManagement.Web.Models.User.FullName
  type: Property
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: FullName
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 62
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: >-
    Kullanıcının tam adı.

    Personelin ad ve soyadını içerir.
  remarks: >-
    <p>

    Format kuralları:

    <ul><li>Ad ve soyad boşluk ile ayrılır</li><li>Maksimum 100 karakter</li><li>Özel karakterler kullanılmamalı</li></ul>

    </p>
  example: []
  syntax:
    content: >-
      [Required]

      [StringLength(100)]

      [Display(Name = "Full Name")]

      public string FullName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(100)>

      <Display(Name:="Full Name")>

      Public Property FullName As String
  overload: ITAssetManagement.Web.Models.User.FullName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Full Name
- uid: ITAssetManagement.Web.Models.User.Email
  commentId: P:ITAssetManagement.Web.Models.User.Email
  id: Email
  parent: ITAssetManagement.Web.Models.User
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: User.Email
  fullName: ITAssetManagement.Web.Models.User.Email
  type: Property
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: Email
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 81
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: >-
    Kullanıcının email adresi.

    İletişim ve bildirimler için kullanılır.
  remarks: >-
    <p>

    Email adresi şu amaçlarla kullanılır:

    <ul><li>Zimmet bildirimleri</li><li>Sistem bildirimleri</li><li>İade hatırlatmaları</li></ul>

    </p>
  example: []
  syntax:
    content: >-
      [Required]

      [StringLength(100)]

      [Display(Name = "Email")]

      [EmailAddress]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(100)>

      <Display(Name:="Email")>

      <EmailAddress>

      Public Property Email As String
  overload: ITAssetManagement.Web.Models.User.Email*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Email
  - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
    ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
    arguments: []
- uid: ITAssetManagement.Web.Models.User.Phone
  commentId: P:ITAssetManagement.Web.Models.User.Phone
  id: Phone
  parent: ITAssetManagement.Web.Models.User
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: User.Phone
  fullName: ITAssetManagement.Web.Models.User.Phone
  type: Property
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: Phone
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 101
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: >-
    Kullanıcının telefon numarası.

    Acil durumlarda iletişim için kullanılır.
  remarks: >-
    <p>

    Format önerileri:

    <ul><li>Uluslararası format (+90...)</li><li>Boşluk ve özel karaktersiz</li><li>Maksimum 20 karakter</li></ul>

    </p>
  example: []
  syntax:
    content: >-
      [StringLength(20)]

      [Display(Name = "Phone")]

      public string? Phone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(20)>

      <Display(Name:="Phone")>

      Public Property Phone As String
  overload: ITAssetManagement.Web.Models.User.Phone*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 20
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Phone
- uid: ITAssetManagement.Web.Models.User.Department
  commentId: P:ITAssetManagement.Web.Models.User.Department
  id: Department
  parent: ITAssetManagement.Web.Models.User
  langs:
  - csharp
  - vb
  name: Department
  nameWithType: User.Department
  fullName: ITAssetManagement.Web.Models.User.Department
  type: Property
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: Department
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 119
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: >-
    Kullanıcının çalıştığı departman.

    Organizasyonel yapı içindeki konumunu belirtir.
  remarks: >-
    <p>

    Departman bilgisi şu amaçlarla kullanılır:

    <ul><li>Zimmet raporlaması</li><li>Departman bazlı envanter takibi</li><li>Bütçe planlama</li></ul>

    </p>
  example: []
  syntax:
    content: >-
      [StringLength(100)]

      [Display(Name = "Department")]

      public string? Department { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(100)>

      <Display(Name:="Department")>

      Public Property Department As String
  overload: ITAssetManagement.Web.Models.User.Department*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Department
- uid: ITAssetManagement.Web.Models.User.Position
  commentId: P:ITAssetManagement.Web.Models.User.Position
  id: Position
  parent: ITAssetManagement.Web.Models.User
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: User.Position
  fullName: ITAssetManagement.Web.Models.User.Position
  type: Property
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: Position
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 137
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: >-
    Kullanıcının pozisyonu.

    Görev ve yetki seviyesini belirtir.
  remarks: >-
    <p>

    Pozisyon bilgisi şu amaçlarla kullanılır:

    <ul><li>Zimmet yetkilendirmesi</li><li>Cihaz tahsis politikaları</li><li>Raporlama kategorileri</li></ul>

    </p>
  example: []
  syntax:
    content: >-
      [StringLength(100)]

      [Display(Name = "Position")]

      public string? Position { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(100)>

      <Display(Name:="Position")>

      Public Property Position As String
  overload: ITAssetManagement.Web.Models.User.Position*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Position
- uid: ITAssetManagement.Web.Models.User.Assignments
  commentId: P:ITAssetManagement.Web.Models.User.Assignments
  id: Assignments
  parent: ITAssetManagement.Web.Models.User
  langs:
  - csharp
  - vb
  name: Assignments
  nameWithType: User.Assignments
  fullName: ITAssetManagement.Web.Models.User.Assignments
  type: Property
  source:
    remote:
      path: ITAssetManagement.Web/Models/User.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: Assignments
    path: ITAssetManagement.Web/Models/User.cs
    startLine: 155
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Models
  summary: >-
    Kullanıcıya zimmetlenmiş varlıkların listesi.

    Aktif ve geçmiş tüm zimmetleri içerir.
  remarks: >-
    <p>

    Bu koleksiyon şu bilgileri sağlar:

    <ul><li>Mevcut zimmetler</li><li>Zimmet geçmişi</li><li>İade edilen cihazlar</li></ul>

    </p>
  example: []
  syntax:
    content: public List<Assignment> Assignments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ITAssetManagement.Web.Models.Assignment}
    content.vb: Public Property Assignments As List(Of Assignment)
  overload: ITAssetManagement.Web.Models.User.Assignments*
references:
- uid: ITAssetManagement.Web.Models
  commentId: N:ITAssetManagement.Web.Models
  href: ITAssetManagement.html
  name: ITAssetManagement.Web.Models
  nameWithType: ITAssetManagement.Web.Models
  fullName: ITAssetManagement.Web.Models
  spec.csharp:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Models
    name: Models
    href: ITAssetManagement.Web.Models.html
  spec.vb:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Models
    name: Models
    href: ITAssetManagement.Web.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ITAssetManagement.Web.Models.User.Id*
  commentId: Overload:ITAssetManagement.Web.Models.User.Id
  href: ITAssetManagement.Web.Models.User.html#ITAssetManagement_Web_Models_User_Id
  name: Id
  nameWithType: User.Id
  fullName: ITAssetManagement.Web.Models.User.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ITAssetManagement.Web.Models.User.FullName*
  commentId: Overload:ITAssetManagement.Web.Models.User.FullName
  href: ITAssetManagement.Web.Models.User.html#ITAssetManagement_Web_Models_User_FullName
  name: FullName
  nameWithType: User.FullName
  fullName: ITAssetManagement.Web.Models.User.FullName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ITAssetManagement.Web.Models.User.Email*
  commentId: Overload:ITAssetManagement.Web.Models.User.Email
  href: ITAssetManagement.Web.Models.User.html#ITAssetManagement_Web_Models_User_Email
  name: Email
  nameWithType: User.Email
  fullName: ITAssetManagement.Web.Models.User.Email
- uid: ITAssetManagement.Web.Models.User.Phone*
  commentId: Overload:ITAssetManagement.Web.Models.User.Phone
  href: ITAssetManagement.Web.Models.User.html#ITAssetManagement_Web_Models_User_Phone
  name: Phone
  nameWithType: User.Phone
  fullName: ITAssetManagement.Web.Models.User.Phone
- uid: ITAssetManagement.Web.Models.User.Department*
  commentId: Overload:ITAssetManagement.Web.Models.User.Department
  href: ITAssetManagement.Web.Models.User.html#ITAssetManagement_Web_Models_User_Department
  name: Department
  nameWithType: User.Department
  fullName: ITAssetManagement.Web.Models.User.Department
- uid: ITAssetManagement.Web.Models.User.Position*
  commentId: Overload:ITAssetManagement.Web.Models.User.Position
  href: ITAssetManagement.Web.Models.User.html#ITAssetManagement_Web_Models_User_Position
  name: Position
  nameWithType: User.Position
  fullName: ITAssetManagement.Web.Models.User.Position
- uid: ITAssetManagement.Web.Models.User.Assignments*
  commentId: Overload:ITAssetManagement.Web.Models.User.Assignments
  href: ITAssetManagement.Web.Models.User.html#ITAssetManagement_Web_Models_User_Assignments
  name: Assignments
  nameWithType: User.Assignments
  fullName: ITAssetManagement.Web.Models.User.Assignments
- uid: System.Collections.Generic.List{ITAssetManagement.Web.Models.Assignment}
  commentId: T:System.Collections.Generic.List{ITAssetManagement.Web.Models.Assignment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Assignment>
  nameWithType: List<Assignment>
  fullName: System.Collections.Generic.List<ITAssetManagement.Web.Models.Assignment>
  nameWithType.vb: List(Of Assignment)
  fullName.vb: System.Collections.Generic.List(Of ITAssetManagement.Web.Models.Assignment)
  name.vb: List(Of Assignment)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
