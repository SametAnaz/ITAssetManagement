### YamlMime:ManagedReference
items:
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  commentId: T:ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  id: AssignmentRepository
  parent: ITAssetManagement.Web.Data.Repositories
  children:
  - ITAssetManagement.Web.Data.Repositories.AssignmentRepository.#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)
  - ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
  - ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync
  - ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
  - ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: AssignmentRepository
  nameWithType: AssignmentRepository
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  type: Class
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: AssignmentRepository
    path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
    startLine: 5
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  syntax:
    content: 'public class AssignmentRepository : GenericRepository<Assignment>, IAssignmentRepository, IGenericRepository<Assignment>'
    content.vb: Public Class AssignmentRepository Inherits GenericRepository(Of Assignment) Implements IAssignmentRepository, IGenericRepository(Of Assignment)
  inheritance:
  - System.Object
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  implements:
  - ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
  - ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Assignment}
  inheritedMembers:
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}._context
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}._dbSet
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetByIdAsync(System.Int32)
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetAllAsync
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Assignment,System.Boolean}})
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddAsync(ITAssetManagement.Web.Models.Assignment)
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Update(ITAssetManagement.Web.Models.Assignment)
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Remove(ITAssetManagement.Web.Models.Assignment)
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)
  commentId: M:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)
  id: '#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)'
  parent: ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  langs:
  - csharp
  - vb
  name: AssignmentRepository(ApplicationDbContext)
  nameWithType: AssignmentRepository.AssignmentRepository(ApplicationDbContext)
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.AssignmentRepository(ITAssetManagement.Web.Data.ApplicationDbContext)
  type: Constructor
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: .ctor
    path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
    startLine: 9
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  syntax:
    content: public AssignmentRepository(ApplicationDbContext context)
    parameters:
    - id: context
      type: ITAssetManagement.Web.Data.ApplicationDbContext
    content.vb: Public Sub New(context As ApplicationDbContext)
  overload: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.#ctor*
  nameWithType.vb: AssignmentRepository.New(ApplicationDbContext)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.New(ITAssetManagement.Web.Data.ApplicationDbContext)
  name.vb: New(ApplicationDbContext)
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync
  id: GetAllWithDetailsAsync
  parent: ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  langs:
  - csharp
  - vb
  name: GetAllWithDetailsAsync()
  nameWithType: AssignmentRepository.GetAllWithDetailsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync()
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetAllWithDetailsAsync
    path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
    startLine: 14
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: Tüm zimmetleri ilişkili verilerle birlikte getirir
  example: []
  syntax:
    content: public Task<IEnumerable<Assignment>> GetAllWithDetailsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment}}
      description: Detaylı zimmet listesi
    content.vb: Public Function GetAllWithDetailsAsync() As Task(Of IEnumerable(Of Assignment))
  overload: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetAllWithDetailsAsync
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
  id: GetByIdWithDetailsAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  langs:
  - csharp
  - vb
  name: GetByIdWithDetailsAsync(int)
  nameWithType: AssignmentRepository.GetByIdWithDetailsAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync(int)
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetByIdWithDetailsAsync
    path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
    startLine: 22
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: ID'ye göre zimmeti ilişkili verilerle birlikte getirir
  example: []
  syntax:
    content: public Task<Assignment?> GetByIdWithDetailsAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Zimmet ID
    return:
      type: System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Assignment}
      description: Detaylı zimmet bilgisi veya null
    content.vb: Public Function GetByIdWithDetailsAsync(id As Integer) As Task(Of Assignment)
  overload: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
  nameWithType.vb: AssignmentRepository.GetByIdWithDetailsAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync(Integer)
  name.vb: GetByIdWithDetailsAsync(Integer)
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
  commentId: M:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
  id: Delete(ITAssetManagement.Web.Models.Assignment)
  parent: ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  langs:
  - csharp
  - vb
  name: Delete(Assignment)
  nameWithType: AssignmentRepository.Delete(Assignment)
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: Delete
    path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
    startLine: 30
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: Zimmeti siler
  example: []
  syntax:
    content: public void Delete(Assignment entity)
    parameters:
    - id: entity
      type: ITAssetManagement.Web.Models.Assignment
      description: Silinecek zimmet
    content.vb: Public Sub Delete(entity As Assignment)
  overload: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete*
  implements:
  - ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync
  id: SaveChangesAsync
  parent: ITAssetManagement.Web.Data.Repositories.AssignmentRepository
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: AssignmentRepository.SaveChangesAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: SaveChangesAsync
    path: ITAssetManagement.Web/Data/Repositories/AssignmentRepository.cs
    startLine: 35
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: Değişiklikleri veritabanına kaydeder
  example: []
  syntax:
    content: public Task SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveChangesAsync() As Task
  overload: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.SaveChangesAsync
references:
- uid: ITAssetManagement.Web.Data.Repositories
  commentId: N:ITAssetManagement.Web.Data.Repositories
  href: ITAssetManagement.html
  name: ITAssetManagement.Web.Data.Repositories
  nameWithType: ITAssetManagement.Web.Data.Repositories
  fullName: ITAssetManagement.Web.Data.Repositories
  spec.csharp:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
  - name: .
  - uid: ITAssetManagement.Web.Data.Repositories
    name: Repositories
    href: ITAssetManagement.Web.Data.Repositories.html
  spec.vb:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
  - name: .
  - uid: ITAssetManagement.Web.Data.Repositories
    name: Repositories
    href: ITAssetManagement.Web.Data.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  commentId: T:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  parent: ITAssetManagement.Web.Data.Repositories
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  name: GenericRepository<Assignment>
  nameWithType: GenericRepository<Assignment>
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>
  nameWithType.vb: GenericRepository(Of Assignment)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment)
  name.vb: GenericRepository(Of Assignment)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
  commentId: T:ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
  parent: ITAssetManagement.Web.Data.Repositories
  href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html
  name: IAssignmentRepository
  nameWithType: IAssignmentRepository
  fullName: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Assignment}
  commentId: T:ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Assignment}
  parent: ITAssetManagement.Web.Data.Repositories
  definition: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  name: IGenericRepository<Assignment>
  nameWithType: IGenericRepository<Assignment>
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<ITAssetManagement.Web.Models.Assignment>
  nameWithType.vb: IGenericRepository(Of Assignment)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of ITAssetManagement.Web.Models.Assignment)
  name.vb: IGenericRepository(Of Assignment)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}._context
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}._context
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._context
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__context
  name: _context
  nameWithType: GenericRepository<Assignment>._context
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>._context
  nameWithType.vb: GenericRepository(Of Assignment)._context
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment)._context
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}._dbSet
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}._dbSet
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._dbSet
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__dbSet
  name: _dbSet
  nameWithType: GenericRepository<Assignment>._dbSet
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>._dbSet
  nameWithType.vb: GenericRepository(Of Assignment)._dbSet
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment)._dbSet
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetByIdAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetByIdAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetByIdAsync(System.Int32)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: GenericRepository<Assignment>.GetByIdAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.GetByIdAsync(int)
  nameWithType.vb: GenericRepository(Of Assignment).GetByIdAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetAllAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetAllAsync
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetAllAsync
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: GenericRepository<Assignment>.GetAllAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.GetAllAsync()
  nameWithType.vb: GenericRepository(Of Assignment).GetAllAsync()
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).GetAllAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Assignment,System.Boolean}})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Assignment,System.Boolean}})
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: FindAsync(Expression<Func<Assignment, bool>>)
  nameWithType: GenericRepository<Assignment>.FindAsync(Expression<Func<Assignment, bool>>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.FindAsync(System.Linq.Expressions.Expression<System.Func<ITAssetManagement.Web.Models.Assignment, bool>>)
  nameWithType.vb: GenericRepository(Of Assignment).FindAsync(Expression(Of Func(Of Assignment, Boolean)))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).FindAsync(System.Linq.Expressions.Expression(Of System.Func(Of ITAssetManagement.Web.Models.Assignment, Boolean)))
  name.vb: FindAsync(Expression(Of Func(Of Assignment, Boolean)))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Assignment,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Assignment,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddAsync(ITAssetManagement.Web.Models.Assignment)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddAsync(ITAssetManagement.Web.Models.Assignment)
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  name: AddAsync(Assignment)
  nameWithType: GenericRepository<Assignment>.AddAsync(Assignment)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.AddAsync(ITAssetManagement.Web.Models.Assignment)
  nameWithType.vb: GenericRepository(Of Assignment).AddAsync(Assignment)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).AddAsync(ITAssetManagement.Web.Models.Assignment)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddAsync(ITAssetManagement.Web.Models.Assignment)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddAsync(ITAssetManagement.Web.Models.Assignment)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  name: AddRangeAsync(IEnumerable<Assignment>)
  nameWithType: GenericRepository<Assignment>.AddRangeAsync(IEnumerable<Assignment>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.AddRangeAsync(System.Collections.Generic.IEnumerable<ITAssetManagement.Web.Models.Assignment>)
  nameWithType.vb: GenericRepository(Of Assignment).AddRangeAsync(IEnumerable(Of Assignment))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).AddRangeAsync(System.Collections.Generic.IEnumerable(Of ITAssetManagement.Web.Models.Assignment))
  name.vb: AddRangeAsync(IEnumerable(Of Assignment))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Update(ITAssetManagement.Web.Models.Assignment)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Update(ITAssetManagement.Web.Models.Assignment)
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  name: Update(Assignment)
  nameWithType: GenericRepository<Assignment>.Update(Assignment)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.Update(ITAssetManagement.Web.Models.Assignment)
  nameWithType.vb: GenericRepository(Of Assignment).Update(Assignment)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).Update(ITAssetManagement.Web.Models.Assignment)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Update(ITAssetManagement.Web.Models.Assignment)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Update(ITAssetManagement.Web.Models.Assignment)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Remove(ITAssetManagement.Web.Models.Assignment)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Remove(ITAssetManagement.Web.Models.Assignment)
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  name: Remove(Assignment)
  nameWithType: GenericRepository<Assignment>.Remove(Assignment)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.Remove(ITAssetManagement.Web.Models.Assignment)
  nameWithType.vb: GenericRepository(Of Assignment).Remove(Assignment)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).Remove(ITAssetManagement.Web.Models.Assignment)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Remove(ITAssetManagement.Web.Models.Assignment)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.Remove(ITAssetManagement.Web.Models.Assignment)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  name: RemoveRange(IEnumerable<Assignment>)
  nameWithType: GenericRepository<Assignment>.RemoveRange(IEnumerable<Assignment>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Assignment>.RemoveRange(System.Collections.Generic.IEnumerable<ITAssetManagement.Web.Models.Assignment>)
  nameWithType.vb: GenericRepository(Of Assignment).RemoveRange(IEnumerable(Of Assignment))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Assignment).RemoveRange(System.Collections.Generic.IEnumerable(Of ITAssetManagement.Web.Models.Assignment))
  name.vb: RemoveRange(IEnumerable(Of Assignment))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Assignment}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
  commentId: T:ITAssetManagement.Web.Data.Repositories.GenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  name: GenericRepository<T>
  nameWithType: GenericRepository<T>
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>
  nameWithType.vb: GenericRepository(Of T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T)
  name.vb: GenericRepository(Of T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
  commentId: T:ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  name: IGenericRepository<T>
  nameWithType: IGenericRepository<T>
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<T>
  nameWithType.vb: IGenericRepository(Of T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of T)
  name.vb: IGenericRepository(Of T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._context
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository`1._context
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__context
  name: _context
  nameWithType: GenericRepository<T>._context
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>._context
  nameWithType.vb: GenericRepository(Of T)._context
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T)._context
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._dbSet
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository`1._dbSet
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__dbSet
  name: _dbSet
  nameWithType: GenericRepository<T>._dbSet
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>._dbSet
  nameWithType.vb: GenericRepository(Of T)._dbSet
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T)._dbSet
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetByIdAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetByIdAsync(System.Int32)
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: GenericRepository<T>.GetByIdAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.GetByIdAsync(int)
  nameWithType.vb: GenericRepository(Of T).GetByIdAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetAllAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetAllAsync
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: GenericRepository<T>.GetAllAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.GetAllAsync()
  nameWithType.vb: GenericRepository(Of T).GetAllAsync()
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).GetAllAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: FindAsync(Expression<Func<T, bool>>)
  nameWithType: GenericRepository<T>.FindAsync(Expression<Func<T, bool>>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.FindAsync(System.Linq.Expressions.Expression<System.Func<T, bool>>)
  nameWithType.vb: GenericRepository(Of T).FindAsync(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).FindAsync(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)))
  name.vb: FindAsync(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  name: AddAsync(T)
  nameWithType: GenericRepository<T>.AddAsync(T)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.AddAsync(T)
  nameWithType.vb: GenericRepository(Of T).AddAsync(T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).AddAsync(T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  name: AddRangeAsync(IEnumerable<T>)
  nameWithType: GenericRepository<T>.AddRangeAsync(IEnumerable<T>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.AddRangeAsync(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: GenericRepository(Of T).AddRangeAsync(IEnumerable(Of T))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).AddRangeAsync(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRangeAsync(IEnumerable(Of T))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  name: Update(T)
  nameWithType: GenericRepository<T>.Update(T)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.Update(T)
  nameWithType.vb: GenericRepository(Of T).Update(T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).Update(T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  name: Remove(T)
  nameWithType: GenericRepository<T>.Remove(T)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.Remove(T)
  nameWithType.vb: GenericRepository(Of T).Remove(T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).Remove(T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  name: RemoveRange(IEnumerable<T>)
  nameWithType: GenericRepository<T>.RemoveRange(IEnumerable<T>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.RemoveRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: GenericRepository(Of T).RemoveRange(IEnumerable(Of T))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).RemoveRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: RemoveRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.#ctor*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.#ctor
  href: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_AssignmentRepository__ctor_ITAssetManagement_Web_Data_ApplicationDbContext_
  name: AssignmentRepository
  nameWithType: AssignmentRepository.AssignmentRepository
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.AssignmentRepository
  nameWithType.vb: AssignmentRepository.New
  fullName.vb: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.New
  name.vb: New
- uid: ITAssetManagement.Web.Data.ApplicationDbContext
  commentId: T:ITAssetManagement.Web.Data.ApplicationDbContext
  parent: ITAssetManagement.Web.Data
  href: ITAssetManagement.Web.Data.ApplicationDbContext.html
  name: ApplicationDbContext
  nameWithType: ApplicationDbContext
  fullName: ITAssetManagement.Web.Data.ApplicationDbContext
- uid: ITAssetManagement.Web.Data
  commentId: N:ITAssetManagement.Web.Data
  href: ITAssetManagement.html
  name: ITAssetManagement.Web.Data
  nameWithType: ITAssetManagement.Web.Data
  fullName: ITAssetManagement.Web.Data
  spec.csharp:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
  spec.vb:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync
  href: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_AssignmentRepository_GetAllWithDetailsAsync
  name: GetAllWithDetailsAsync
  nameWithType: AssignmentRepository.GetAllWithDetailsAsync
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetAllWithDetailsAsync
- uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetAllWithDetailsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetAllWithDetailsAsync
  parent: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
  href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_GetAllWithDetailsAsync
  name: GetAllWithDetailsAsync()
  nameWithType: IAssignmentRepository.GetAllWithDetailsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetAllWithDetailsAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetAllWithDetailsAsync
    name: GetAllWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_GetAllWithDetailsAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetAllWithDetailsAsync
    name: GetAllWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_GetAllWithDetailsAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Assignment}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Assignment>>
  nameWithType: Task<IEnumerable<Assignment>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ITAssetManagement.Web.Models.Assignment>>
  nameWithType.vb: Task(Of IEnumerable(Of Assignment))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of ITAssetManagement.Web.Models.Assignment))
  name.vb: Task(Of IEnumerable(Of Assignment))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync
  href: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_AssignmentRepository_GetByIdWithDetailsAsync_System_Int32_
  name: GetByIdWithDetailsAsync
  nameWithType: AssignmentRepository.GetByIdWithDetailsAsync
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.GetByIdWithDetailsAsync
- uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_GetByIdWithDetailsAsync_System_Int32_
  name: GetByIdWithDetailsAsync(int)
  nameWithType: IAssignmentRepository.GetByIdWithDetailsAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetByIdWithDetailsAsync(int)
  nameWithType.vb: IAssignmentRepository.GetByIdWithDetailsAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetByIdWithDetailsAsync(Integer)
  name.vb: GetByIdWithDetailsAsync(Integer)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
    name: GetByIdWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_GetByIdWithDetailsAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.GetByIdWithDetailsAsync(System.Int32)
    name: GetByIdWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_GetByIdWithDetailsAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Assignment}
  commentId: T:System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Assignment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Assignment>
  nameWithType: Task<Assignment>
  fullName: System.Threading.Tasks.Task<ITAssetManagement.Web.Models.Assignment>
  nameWithType.vb: Task(Of Assignment)
  fullName.vb: System.Threading.Tasks.Task(Of ITAssetManagement.Web.Models.Assignment)
  name.vb: Task(Of Assignment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete
  href: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_AssignmentRepository_Delete_ITAssetManagement_Web_Models_Assignment_
  name: Delete
  nameWithType: AssignmentRepository.Delete
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.Delete
- uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
  commentId: M:ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
  parent: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
  href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_Delete_ITAssetManagement_Web_Models_Assignment_
  name: Delete(Assignment)
  nameWithType: IAssignmentRepository.Delete(Assignment)
  fullName: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
    name: Delete
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_Delete_ITAssetManagement_Web_Models_Assignment_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.Delete(ITAssetManagement.Web.Models.Assignment)
    name: Delete
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_Delete_ITAssetManagement_Web_Models_Assignment_
  - name: (
  - uid: ITAssetManagement.Web.Models.Assignment
    name: Assignment
    href: ITAssetManagement.Web.Models.Assignment.html
  - name: )
- uid: ITAssetManagement.Web.Models.Assignment
  commentId: T:ITAssetManagement.Web.Models.Assignment
  parent: ITAssetManagement.Web.Models
  href: ITAssetManagement.Web.Models.Assignment.html
  name: Assignment
  nameWithType: Assignment
  fullName: ITAssetManagement.Web.Models.Assignment
- uid: ITAssetManagement.Web.Models
  commentId: N:ITAssetManagement.Web.Models
  href: ITAssetManagement.html
  name: ITAssetManagement.Web.Models
  nameWithType: ITAssetManagement.Web.Models
  fullName: ITAssetManagement.Web.Models
  spec.csharp:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Models
    name: Models
    href: ITAssetManagement.Web.Models.html
  spec.vb:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Models
    name: Models
    href: ITAssetManagement.Web.Models.html
- uid: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync
  href: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_AssignmentRepository_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: AssignmentRepository.SaveChangesAsync
  fullName: ITAssetManagement.Web.Data.Repositories.AssignmentRepository.SaveChangesAsync
- uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.SaveChangesAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.SaveChangesAsync
  parent: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository
  href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_SaveChangesAsync
  name: SaveChangesAsync()
  nameWithType: IAssignmentRepository.SaveChangesAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.SaveChangesAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.SaveChangesAsync
    name: SaveChangesAsync
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.SaveChangesAsync
    name: SaveChangesAsync
    href: ITAssetManagement.Web.Data.Repositories.IAssignmentRepository.html#ITAssetManagement_Web_Data_Repositories_IAssignmentRepository_SaveChangesAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
