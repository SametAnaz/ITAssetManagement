### YamlMime:ManagedReference
items:
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  commentId: T:ITAssetManagement.Web.Data.Repositories.LaptopRepository
  id: LaptopRepository
  parent: ITAssetManagement.Web.Data.Repositories
  children:
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync(System.Int32)
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
  - ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync
  langs:
  - csharp
  - vb
  name: LaptopRepository
  nameWithType: LaptopRepository
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  type: Class
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: LaptopRepository
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 6
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  syntax:
    content: 'public class LaptopRepository : GenericRepository<Laptop>, ILaptopRepository, IGenericRepository<Laptop>'
    content.vb: Public Class LaptopRepository Inherits GenericRepository(Of Laptop) Implements ILaptopRepository, IGenericRepository(Of Laptop)
  inheritance:
  - System.Object
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  implements:
  - ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  - ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}
  inheritedMembers:
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}._context
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}._dbSet
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Laptop,System.Boolean}})
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddAsync(ITAssetManagement.Web.Models.Laptop)
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Update(ITAssetManagement.Web.Models.Laptop)
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Remove(ITAssetManagement.Web.Models.Laptop)
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
  - ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.SaveChangesAsync
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)
  id: '#ctor(ITAssetManagement.Web.Data.ApplicationDbContext)'
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: LaptopRepository(ApplicationDbContext)
  nameWithType: LaptopRepository.LaptopRepository(ApplicationDbContext)
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.LaptopRepository(ITAssetManagement.Web.Data.ApplicationDbContext)
  type: Constructor
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: .ctor
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 8
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  syntax:
    content: public LaptopRepository(ApplicationDbContext context)
    parameters:
    - id: context
      type: ITAssetManagement.Web.Data.ApplicationDbContext
    content.vb: Public Sub New(context As ApplicationDbContext)
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.#ctor*
  nameWithType.vb: LaptopRepository.New(ApplicationDbContext)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.LaptopRepository.New(ITAssetManagement.Web.Data.ApplicationDbContext)
  name.vb: New(ApplicationDbContext)
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync
  id: GetAllAsync
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: GetAllAsync()
  nameWithType: LaptopRepository.GetAllAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync()
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetAllAsync
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 13
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: Tüm entity'leri getirir
  example: []
  syntax:
    content: public Task<IEnumerable<Laptop>> GetAllAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop}}
      description: Entity listesi
    content.vb: Public Function GetAllAsync() As Task(Of IEnumerable(Of Laptop))
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetAllAsync
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync(System.Int32)
  id: GetByIdAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: GetByIdAsync(int)
  nameWithType: LaptopRepository.GetByIdAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync(int)
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetByIdAsync
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 21
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: ID'ye göre entity getirir
  example: []
  syntax:
    content: public Task<Laptop?> GetByIdAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Entity ID
    return:
      type: System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Laptop}
      description: Bulunan entity veya null
    content.vb: Public Function GetByIdAsync(id As Integer) As Task(Of Laptop)
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetByIdAsync(System.Int32)
  nameWithType.vb: LaptopRepository.GetByIdAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
  id: GetLaptopWithDetailsAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: GetLaptopWithDetailsAsync(int)
  nameWithType: LaptopRepository.GetLaptopWithDetailsAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync(int)
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetLaptopWithDetailsAsync
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 27
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: ID'ye göre laptop'u ilişkili verilerle birlikte getirir
  example: []
  syntax:
    content: public Task<Laptop?> GetLaptopWithDetailsAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Laptop ID
    return:
      type: System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Laptop}
      description: Detaylı laptop bilgisi veya null
    content.vb: Public Function GetLaptopWithDetailsAsync(id As Integer) As Task(Of Laptop)
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
  nameWithType.vb: LaptopRepository.GetLaptopWithDetailsAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync(Integer)
  name.vb: GetLaptopWithDetailsAsync(Integer)
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync
  id: GetLaptopsWithDetailsAsync
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: GetLaptopsWithDetailsAsync()
  nameWithType: LaptopRepository.GetLaptopsWithDetailsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync()
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetLaptopsWithDetailsAsync
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 35
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: Tüm laptop'ları ilişkili verilerle birlikte getirir
  example: []
  syntax:
    content: public Task<IEnumerable<Laptop>> GetLaptopsWithDetailsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop}}
      description: Detaylı laptop listesi
    content.vb: Public Function GetLaptopsWithDetailsAsync() As Task(Of IEnumerable(Of Laptop))
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopsWithDetailsAsync
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync
  id: GetAllActiveLaptopsAsync
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: GetAllActiveLaptopsAsync()
  nameWithType: LaptopRepository.GetAllActiveLaptopsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync()
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetAllActiveLaptopsAsync
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 44
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: Aktif durumdaki tüm laptop'ları getirir
  example: []
  syntax:
    content: public Task<IEnumerable<Laptop>> GetAllActiveLaptopsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop}}
      description: Aktif laptop listesi
    content.vb: Public Function GetAllActiveLaptopsAsync() As Task(Of IEnumerable(Of Laptop))
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllActiveLaptopsAsync
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync
  id: GetAllDeletedLaptopsAsync
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: GetAllDeletedLaptopsAsync()
  nameWithType: LaptopRepository.GetAllDeletedLaptopsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync()
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetAllDeletedLaptopsAsync
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 51
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: Silinmiş durumdaki tüm laptop'ları getirir
  example: []
  syntax:
    content: public Task<IEnumerable<Laptop>> GetAllDeletedLaptopsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop}}
      description: Silinmiş laptop listesi
    content.vb: Public Function GetAllDeletedLaptopsAsync() As Task(Of IEnumerable(Of Laptop))
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllDeletedLaptopsAsync
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
  id: GetLaptopByIdIncludingDeletedAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.LaptopRepository
  langs:
  - csharp
  - vb
  name: GetLaptopByIdIncludingDeletedAsync(int)
  nameWithType: LaptopRepository.GetLaptopByIdIncludingDeletedAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync(int)
  type: Method
  source:
    remote:
      path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
      branch: master
      repo: https://github.com/SametAnaz/ITAssetManagement.git
    id: GetLaptopByIdIncludingDeletedAsync
    path: ITAssetManagement.Web/Data/Repositories/LaptopRepository.cs
    startLine: 58
  assemblies:
  - ITAssetManagement.Web
  namespace: ITAssetManagement.Web.Data.Repositories
  summary: ID'ye göre laptop'u silinmiş olsa bile getirir
  example: []
  syntax:
    content: public Task<Laptop?> GetLaptopByIdIncludingDeletedAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Laptop ID
    return:
      type: System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Laptop}
      description: Laptop bilgisi veya null
    content.vb: Public Function GetLaptopByIdIncludingDeletedAsync(id As Integer) As Task(Of Laptop)
  overload: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync*
  implements:
  - ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
  nameWithType.vb: LaptopRepository.GetLaptopByIdIncludingDeletedAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync(Integer)
  name.vb: GetLaptopByIdIncludingDeletedAsync(Integer)
references:
- uid: ITAssetManagement.Web.Data.Repositories
  commentId: N:ITAssetManagement.Web.Data.Repositories
  href: ITAssetManagement.html
  name: ITAssetManagement.Web.Data.Repositories
  nameWithType: ITAssetManagement.Web.Data.Repositories
  fullName: ITAssetManagement.Web.Data.Repositories
  spec.csharp:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
  - name: .
  - uid: ITAssetManagement.Web.Data.Repositories
    name: Repositories
    href: ITAssetManagement.Web.Data.Repositories.html
  spec.vb:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
  - name: .
  - uid: ITAssetManagement.Web.Data.Repositories
    name: Repositories
    href: ITAssetManagement.Web.Data.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  commentId: T:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  parent: ITAssetManagement.Web.Data.Repositories
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  name: GenericRepository<Laptop>
  nameWithType: GenericRepository<Laptop>
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>
  nameWithType.vb: GenericRepository(Of Laptop)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop)
  name.vb: GenericRepository(Of Laptop)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: <
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  commentId: T:ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  parent: ITAssetManagement.Web.Data.Repositories
  href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html
  name: ILaptopRepository
  nameWithType: ILaptopRepository
  fullName: ITAssetManagement.Web.Data.Repositories.ILaptopRepository
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}
  commentId: T:ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}
  parent: ITAssetManagement.Web.Data.Repositories
  definition: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  name: IGenericRepository<Laptop>
  nameWithType: IGenericRepository<Laptop>
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<ITAssetManagement.Web.Models.Laptop>
  nameWithType.vb: IGenericRepository(Of Laptop)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of ITAssetManagement.Web.Models.Laptop)
  name.vb: IGenericRepository(Of Laptop)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: <
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}._context
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}._context
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._context
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__context
  name: _context
  nameWithType: GenericRepository<Laptop>._context
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>._context
  nameWithType.vb: GenericRepository(Of Laptop)._context
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop)._context
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}._dbSet
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}._dbSet
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._dbSet
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__dbSet
  name: _dbSet
  nameWithType: GenericRepository<Laptop>._dbSet
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>._dbSet
  nameWithType.vb: GenericRepository(Of Laptop)._dbSet
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop)._dbSet
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Laptop,System.Boolean}})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Laptop,System.Boolean}})
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: FindAsync(Expression<Func<Laptop, bool>>)
  nameWithType: GenericRepository<Laptop>.FindAsync(Expression<Func<Laptop, bool>>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>.FindAsync(System.Linq.Expressions.Expression<System.Func<ITAssetManagement.Web.Models.Laptop, bool>>)
  nameWithType.vb: GenericRepository(Of Laptop).FindAsync(Expression(Of Func(Of Laptop, Boolean)))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop).FindAsync(System.Linq.Expressions.Expression(Of System.Func(Of ITAssetManagement.Web.Models.Laptop, Boolean)))
  name.vb: FindAsync(Expression(Of Func(Of Laptop, Boolean)))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Laptop,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.FindAsync(System.Linq.Expressions.Expression{System.Func{ITAssetManagement.Web.Models.Laptop,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddAsync(ITAssetManagement.Web.Models.Laptop)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddAsync(ITAssetManagement.Web.Models.Laptop)
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  name: AddAsync(Laptop)
  nameWithType: GenericRepository<Laptop>.AddAsync(Laptop)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>.AddAsync(ITAssetManagement.Web.Models.Laptop)
  nameWithType.vb: GenericRepository(Of Laptop).AddAsync(Laptop)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop).AddAsync(ITAssetManagement.Web.Models.Laptop)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddAsync(ITAssetManagement.Web.Models.Laptop)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddAsync(ITAssetManagement.Web.Models.Laptop)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  name: AddRangeAsync(IEnumerable<Laptop>)
  nameWithType: GenericRepository<Laptop>.AddRangeAsync(IEnumerable<Laptop>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>.AddRangeAsync(System.Collections.Generic.IEnumerable<ITAssetManagement.Web.Models.Laptop>)
  nameWithType.vb: GenericRepository(Of Laptop).AddRangeAsync(IEnumerable(Of Laptop))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop).AddRangeAsync(System.Collections.Generic.IEnumerable(Of ITAssetManagement.Web.Models.Laptop))
  name.vb: AddRangeAsync(IEnumerable(Of Laptop))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.AddRangeAsync(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Update(ITAssetManagement.Web.Models.Laptop)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Update(ITAssetManagement.Web.Models.Laptop)
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  name: Update(Laptop)
  nameWithType: GenericRepository<Laptop>.Update(Laptop)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>.Update(ITAssetManagement.Web.Models.Laptop)
  nameWithType.vb: GenericRepository(Of Laptop).Update(Laptop)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop).Update(ITAssetManagement.Web.Models.Laptop)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Update(ITAssetManagement.Web.Models.Laptop)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Update(ITAssetManagement.Web.Models.Laptop)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Remove(ITAssetManagement.Web.Models.Laptop)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Remove(ITAssetManagement.Web.Models.Laptop)
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  name: Remove(Laptop)
  nameWithType: GenericRepository<Laptop>.Remove(Laptop)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>.Remove(ITAssetManagement.Web.Models.Laptop)
  nameWithType.vb: GenericRepository(Of Laptop).Remove(Laptop)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop).Remove(ITAssetManagement.Web.Models.Laptop)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Remove(ITAssetManagement.Web.Models.Laptop)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.Remove(ITAssetManagement.Web.Models.Laptop)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  name: RemoveRange(IEnumerable<Laptop>)
  nameWithType: GenericRepository<Laptop>.RemoveRange(IEnumerable<Laptop>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>.RemoveRange(System.Collections.Generic.IEnumerable<ITAssetManagement.Web.Models.Laptop>)
  nameWithType.vb: GenericRepository(Of Laptop).RemoveRange(IEnumerable(Of Laptop))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop).RemoveRange(System.Collections.Generic.IEnumerable(Of ITAssetManagement.Web.Models.Laptop))
  name.vb: RemoveRange(IEnumerable(Of Laptop))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.RemoveRange(System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.SaveChangesAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.SaveChangesAsync
  parent: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.SaveChangesAsync
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_SaveChangesAsync
  name: SaveChangesAsync()
  nameWithType: GenericRepository<Laptop>.SaveChangesAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<ITAssetManagement.Web.Models.Laptop>.SaveChangesAsync()
  nameWithType.vb: GenericRepository(Of Laptop).SaveChangesAsync()
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of ITAssetManagement.Web.Models.Laptop).SaveChangesAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.SaveChangesAsync
    name: SaveChangesAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository{ITAssetManagement.Web.Models.Laptop}.SaveChangesAsync
    name: SaveChangesAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_SaveChangesAsync
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
  commentId: T:ITAssetManagement.Web.Data.Repositories.GenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  name: GenericRepository<T>
  nameWithType: GenericRepository<T>
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>
  nameWithType.vb: GenericRepository(Of T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T)
  name.vb: GenericRepository(Of T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1
    name: GenericRepository
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
  commentId: T:ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  name: IGenericRepository<T>
  nameWithType: IGenericRepository<T>
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<T>
  nameWithType.vb: IGenericRepository(Of T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of T)
  name.vb: IGenericRepository(Of T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1
    name: IGenericRepository
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._context
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository`1._context
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__context
  name: _context
  nameWithType: GenericRepository<T>._context
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>._context
  nameWithType.vb: GenericRepository(Of T)._context
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T)._context
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1._dbSet
  commentId: F:ITAssetManagement.Web.Data.Repositories.GenericRepository`1._dbSet
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1__dbSet
  name: _dbSet
  nameWithType: GenericRepository<T>._dbSet
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>._dbSet
  nameWithType.vb: GenericRepository(Of T)._dbSet
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T)._dbSet
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: FindAsync(Expression<Func<T, bool>>)
  nameWithType: GenericRepository<T>.FindAsync(Expression<Func<T, bool>>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.FindAsync(System.Linq.Expressions.Expression<System.Func<T, bool>>)
  nameWithType.vb: GenericRepository(Of T).FindAsync(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).FindAsync(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)))
  name.vb: FindAsync(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: FindAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_FindAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  name: AddAsync(T)
  nameWithType: GenericRepository<T>.AddAsync(T)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.AddAsync(T)
  nameWithType.vb: GenericRepository(Of T).AddAsync(T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).AddAsync(T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddAsync(`0)
    name: AddAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  name: AddRangeAsync(IEnumerable<T>)
  nameWithType: GenericRepository<T>.AddRangeAsync(IEnumerable<T>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.AddRangeAsync(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: GenericRepository(Of T).AddRangeAsync(IEnumerable(Of T))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).AddRangeAsync(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRangeAsync(IEnumerable(Of T))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})
    name: AddRangeAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_AddRangeAsync_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  name: Update(T)
  nameWithType: GenericRepository<T>.Update(T)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.Update(T)
  nameWithType.vb: GenericRepository(Of T).Update(T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).Update(T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Update(`0)
    name: Update
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Update__0_
  - name: (
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  name: Remove(T)
  nameWithType: GenericRepository<T>.Remove(T)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.Remove(T)
  nameWithType.vb: GenericRepository(Of T).Remove(T)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).Remove(T)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.Remove(`0)
    name: Remove
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_Remove__0_
  - name: (
  - name: T
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  name: RemoveRange(IEnumerable<T>)
  nameWithType: GenericRepository<T>.RemoveRange(IEnumerable<T>)
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.RemoveRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: GenericRepository(Of T).RemoveRange(IEnumerable(Of T))
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).RemoveRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: RemoveRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_RemoveRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.SaveChangesAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.GenericRepository`1.SaveChangesAsync
  href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_SaveChangesAsync
  name: SaveChangesAsync()
  nameWithType: GenericRepository<T>.SaveChangesAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.GenericRepository<T>.SaveChangesAsync()
  nameWithType.vb: GenericRepository(Of T).SaveChangesAsync()
  fullName.vb: ITAssetManagement.Web.Data.Repositories.GenericRepository(Of T).SaveChangesAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.SaveChangesAsync
    name: SaveChangesAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.GenericRepository`1.SaveChangesAsync
    name: SaveChangesAsync
    href: ITAssetManagement.Web.Data.Repositories.GenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_GenericRepository_1_SaveChangesAsync
  - name: (
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.#ctor*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.#ctor
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository__ctor_ITAssetManagement_Web_Data_ApplicationDbContext_
  name: LaptopRepository
  nameWithType: LaptopRepository.LaptopRepository
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.LaptopRepository
  nameWithType.vb: LaptopRepository.New
  fullName.vb: ITAssetManagement.Web.Data.Repositories.LaptopRepository.New
  name.vb: New
- uid: ITAssetManagement.Web.Data.ApplicationDbContext
  commentId: T:ITAssetManagement.Web.Data.ApplicationDbContext
  parent: ITAssetManagement.Web.Data
  href: ITAssetManagement.Web.Data.ApplicationDbContext.html
  name: ApplicationDbContext
  nameWithType: ApplicationDbContext
  fullName: ITAssetManagement.Web.Data.ApplicationDbContext
- uid: ITAssetManagement.Web.Data
  commentId: N:ITAssetManagement.Web.Data
  href: ITAssetManagement.html
  name: ITAssetManagement.Web.Data
  nameWithType: ITAssetManagement.Web.Data
  fullName: ITAssetManagement.Web.Data
  spec.csharp:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
  spec.vb:
  - uid: ITAssetManagement
    name: ITAssetManagement
    href: ITAssetManagement.html
  - name: .
  - uid: ITAssetManagement.Web
    name: Web
    href: ITAssetManagement.Web.html
  - name: .
  - uid: ITAssetManagement.Web.Data
    name: Data
    href: ITAssetManagement.Web.Data.html
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository_GetAllAsync
  name: GetAllAsync
  nameWithType: LaptopRepository.GetAllAsync
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllAsync
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetAllAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetAllAsync
  parent: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetAllAsync
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: IGenericRepository<Laptop>.GetAllAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<ITAssetManagement.Web.Models.Laptop>.GetAllAsync()
  nameWithType.vb: IGenericRepository(Of Laptop).GetAllAsync()
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of ITAssetManagement.Web.Models.Laptop).GetAllAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ITAssetManagement.Web.Models.Laptop}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Laptop>>
  nameWithType: Task<IEnumerable<Laptop>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ITAssetManagement.Web.Models.Laptop>>
  nameWithType.vb: Task(Of IEnumerable(Of Laptop))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of ITAssetManagement.Web.Models.Laptop))
  name.vb: Task(Of IEnumerable(Of Laptop))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetAllAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetAllAsync
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: IGenericRepository<T>.GetAllAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<T>.GetAllAsync()
  nameWithType.vb: IGenericRepository(Of T).GetAllAsync()
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of T).GetAllAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetAllAsync
    name: GetAllAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository_GetByIdAsync_System_Int32_
  name: GetByIdAsync
  nameWithType: LaptopRepository.GetByIdAsync
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetByIdAsync
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetByIdAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetByIdAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}
  definition: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetByIdAsync(System.Int32)
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: IGenericRepository<Laptop>.GetByIdAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<ITAssetManagement.Web.Models.Laptop>.GetByIdAsync(int)
  nameWithType.vb: IGenericRepository(Of Laptop).GetByIdAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of ITAssetManagement.Web.Models.Laptop).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository{ITAssetManagement.Web.Models.Laptop}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Laptop}
  commentId: T:System.Threading.Tasks.Task{ITAssetManagement.Web.Models.Laptop}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Laptop>
  nameWithType: Task<Laptop>
  fullName: System.Threading.Tasks.Task<ITAssetManagement.Web.Models.Laptop>
  nameWithType.vb: Task(Of Laptop)
  fullName.vb: System.Threading.Tasks.Task(Of ITAssetManagement.Web.Models.Laptop)
  name.vb: Task(Of Laptop)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ITAssetManagement.Web.Models.Laptop
    name: Laptop
    href: ITAssetManagement.Web.Models.Laptop.html
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetByIdAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetByIdAsync(System.Int32)
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: IGenericRepository<T>.GetByIdAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.IGenericRepository<T>.GetByIdAsync(int)
  nameWithType.vb: IGenericRepository(Of T).GetByIdAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.IGenericRepository(Of T).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.IGenericRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: ITAssetManagement.Web.Data.Repositories.IGenericRepository-1.html#ITAssetManagement_Web_Data_Repositories_IGenericRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository_GetLaptopWithDetailsAsync_System_Int32_
  name: GetLaptopWithDetailsAsync
  nameWithType: LaptopRepository.GetLaptopWithDetailsAsync
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopWithDetailsAsync
- uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopWithDetailsAsync_System_Int32_
  name: GetLaptopWithDetailsAsync(int)
  nameWithType: ILaptopRepository.GetLaptopWithDetailsAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopWithDetailsAsync(int)
  nameWithType.vb: ILaptopRepository.GetLaptopWithDetailsAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopWithDetailsAsync(Integer)
  name.vb: GetLaptopWithDetailsAsync(Integer)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
    name: GetLaptopWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopWithDetailsAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopWithDetailsAsync(System.Int32)
    name: GetLaptopWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopWithDetailsAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository_GetLaptopsWithDetailsAsync
  name: GetLaptopsWithDetailsAsync
  nameWithType: LaptopRepository.GetLaptopsWithDetailsAsync
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopsWithDetailsAsync
- uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopsWithDetailsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopsWithDetailsAsync
  parent: ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopsWithDetailsAsync
  name: GetLaptopsWithDetailsAsync()
  nameWithType: ILaptopRepository.GetLaptopsWithDetailsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopsWithDetailsAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopsWithDetailsAsync
    name: GetLaptopsWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopsWithDetailsAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopsWithDetailsAsync
    name: GetLaptopsWithDetailsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopsWithDetailsAsync
  - name: (
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository_GetAllActiveLaptopsAsync
  name: GetAllActiveLaptopsAsync
  nameWithType: LaptopRepository.GetAllActiveLaptopsAsync
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllActiveLaptopsAsync
- uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllActiveLaptopsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllActiveLaptopsAsync
  parent: ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetAllActiveLaptopsAsync
  name: GetAllActiveLaptopsAsync()
  nameWithType: ILaptopRepository.GetAllActiveLaptopsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllActiveLaptopsAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllActiveLaptopsAsync
    name: GetAllActiveLaptopsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetAllActiveLaptopsAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllActiveLaptopsAsync
    name: GetAllActiveLaptopsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetAllActiveLaptopsAsync
  - name: (
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository_GetAllDeletedLaptopsAsync
  name: GetAllDeletedLaptopsAsync
  nameWithType: LaptopRepository.GetAllDeletedLaptopsAsync
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetAllDeletedLaptopsAsync
- uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllDeletedLaptopsAsync
  commentId: M:ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllDeletedLaptopsAsync
  parent: ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetAllDeletedLaptopsAsync
  name: GetAllDeletedLaptopsAsync()
  nameWithType: ILaptopRepository.GetAllDeletedLaptopsAsync()
  fullName: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllDeletedLaptopsAsync()
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllDeletedLaptopsAsync
    name: GetAllDeletedLaptopsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetAllDeletedLaptopsAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetAllDeletedLaptopsAsync
    name: GetAllDeletedLaptopsAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetAllDeletedLaptopsAsync
  - name: (
  - name: )
- uid: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync*
  commentId: Overload:ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync
  href: ITAssetManagement.Web.Data.Repositories.LaptopRepository.html#ITAssetManagement_Web_Data_Repositories_LaptopRepository_GetLaptopByIdIncludingDeletedAsync_System_Int32_
  name: GetLaptopByIdIncludingDeletedAsync
  nameWithType: LaptopRepository.GetLaptopByIdIncludingDeletedAsync
  fullName: ITAssetManagement.Web.Data.Repositories.LaptopRepository.GetLaptopByIdIncludingDeletedAsync
- uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
  commentId: M:ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
  parent: ITAssetManagement.Web.Data.Repositories.ILaptopRepository
  isExternal: true
  href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopByIdIncludingDeletedAsync_System_Int32_
  name: GetLaptopByIdIncludingDeletedAsync(int)
  nameWithType: ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(int)
  fullName: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(int)
  nameWithType.vb: ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(Integer)
  fullName.vb: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(Integer)
  name.vb: GetLaptopByIdIncludingDeletedAsync(Integer)
  spec.csharp:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
    name: GetLaptopByIdIncludingDeletedAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopByIdIncludingDeletedAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.GetLaptopByIdIncludingDeletedAsync(System.Int32)
    name: GetLaptopByIdIncludingDeletedAsync
    href: ITAssetManagement.Web.Data.Repositories.ILaptopRepository.html#ITAssetManagement_Web_Data_Repositories_ILaptopRepository_GetLaptopByIdIncludingDeletedAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
